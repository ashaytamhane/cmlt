/*
CMLT Library
Author: Ashay Tamhane

*/

#include "data.hpp"
#include<string.h>

Matrix Data::get_X()
{
	return X;	
}

Matrix Data::get_Y()
{
	return Y;	
}

Matrix Data::get_data()	
{
	return data;
}

Matrix Data::prepend_ones(Matrix X)
{
	Matrix result;
	for(int l=0;l<=X.get_numrows();l++)
	{
		result.insert(l,0,1);		
		for(int k=0;k<=X.get_numcols();k++)
		{
			result.insert(l,k+1,X(l,k));
		}
	}
	return result;
}

void Data::split_cols(int i)
{
	for(int l=0;l<=data.get_numrows();l++)
	{
		for(int k=0;k<=data.get_numcols();k++)
		{
			if(k<=i)
			{
				X.insert(l,k,data(l,k));
			}
			else
				Y.insert(l,k-i-1,data(l,k));
		}
	}
}

Matrix Data::load_file(string filename)
{
	Matrix d;
	ifstream input;
	input.open(filename.c_str());
	string line;
	int row=0,col=0;
	while(input.good())
	{
		col=0;
		getline(input,line);
		char* pch;
		pch=strtok((char*)line.c_str()," ,");
		while(pch!=NULL)
		{
			string s;
			s.append(pch);
			d.insert(row,col,s);
			d.print();
			pch=strtok(NULL," ,");
			col++;
		}
		row++;
	}
	data=d;
	return d;
}

